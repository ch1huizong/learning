
一、数据类型（元素）

	数据结构(8) ->      整数 浮点数 原子 二进制数 引用 Pid 端口 匿名函数


	原子(标签)  ->      小写字母开头，alphanum/_/@或者''表示)


	字符串(列表子集) -> 字符码点的整数列表或二进制，字符串字面量"整数列表的简写, $
                        本质就是列表

    不可变变量  ->      以大写字母开头, 一次性赋值和模式匹配, "="作用,匹配、赋值


	WOW : 字符串模式匹配太强大了，可以省略好多解析提取字符子串的操作。
		"http://" ++ Rest = "http://www.erlang.org"  简化

        左侧模式中不能有函调，运算符，fun函数


	------------------------------------------------------------

    元组{}		    数目固定，提取
    列表[]		    数目任意，提取（结构构建, 模式匹配）    --中介

    记录#todo{}     子段名称是原子                          --软件工程，整体控制


                    clear_status(#todo{status=S, who=W} = R)   --模式匹配

				    X2#todo.text  访问text字段值            -- 提取特定字段值
			

    映射#{ key1 Op1 val1, ... }     内部以键排序集合,键必须是全绑定（固定）的
                                    出现在模式中Key也必须是绑定的
				
				操作: 
                    => 创建、更新
                    := 更新(key存在)、 模式匹配

				更新：
                    NewMap = OldMap#{ K1 Op V1,...Kn Op Vn }

				maps相关函数：
					is_map, new, to_list, from_list,size, is_key,
					get, find, keys,remove, without, difference

				注意：模式匹配只有:=操作符


	------------------------------------------------------------
    文件和网络默认是以字节为单位存储和发送的。

    二进制 -> 最简字节串

        内容 -> 0-255整数、字符串           -- 字面原始字节串构成,原位输出
		类型 -> 二进制型binary(8/网路/文件), 位串bitstring



    位语法表达式 ->  <<E1,E2,..En>>  Ei是片段,Ei = Value:Size/TypeList   -- 4种形式

    类型指定列表(End-Sign-Type-Unit)
        End : 与整数和浮点数有关;
        Sign: 模式匹配;
        Type: 默认值integer
        Unit: integer、float、bitstring默认单位是1位；binary默认单位是1字节


    Size:具有(不同类型)、默认不同(单位)的对象有的(默认大小)


    三方面：内容、默认、打印形式(8)     ---- 默认类型(integer)、默认单位、默认尺寸

    值为浮点数怎么不行啊？此时需要指定类型。

    异常情况？


    相关函数：list_to_binary, binary_to_list,split_binary, byte_size 
              term_to_binary, binary_to_term(网络和文件)


	------------------------------------------------------------

类型系统

    类型声明 ->  
        -type NewTypeName(TVar1, Tvar2,...TvarN) :: Type.

        -opaque  声明不透明类型
        -export_type 导出类型
    
    函数规范 ->
        -spec funName(T1, T2,...,Tn) -> Tret When
            Ti :: Typei,
            Tj :: Typej.

    局限:
        只是报告程序中存在的不一致;

        有可能通过测试但是实践上不对;

        使用原则：
            避免使用-compile(export_all);
            为模块导出函数的所有参数提供详细的类型规范;
            为记录定义里的所有元素提供默认的参数;
            把匿名变量用作参数经常会导致结果类型不如你所预想的那么精确;
            
    

    


