
并发任务：拥有并行执行的能力，任务之间独立，相互依赖小。
每个HTTP请求之间是独立的，关联度不高。

进程通信四种手段：
	1.共享内存，锁为基础
	2.软件事物内存，上面的变体，用类似数据库的事务进行一些底层的封装
	3.future,被外包到其他进程的计算结果
	4.消息传递

进程交流：消息传递

退出信号

进程自包含状态，进程组退出

自治区

分布式：
	传统问题：
		如何切分现有程序代码搭建构建分布式系统？
		各部分如何通信？
		如何处理故障？

	erlang现在问题：
		明确进程职能?
		每类进程需要运行多少实例？
		在哪些机器运行？
		怎样负载均衡和怎么样管理数据？

Erlang VM: 运行时系统 + 模拟器
	1.调度器
	2.IO和调度（事件驱动）
	3.内存垃圾回收

