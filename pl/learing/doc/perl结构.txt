
一、程序结构
	
	子程序
		定义
		sub name {
			my ($m, $n) = @_; # 私有变量
			$m + $n;   # 返回值
		}

		变长参数列表；空列表; 返回值(最后一个表达式值)

		:my(作用域，不加括号只能用来声明单个词法变量)
		   独立的变量，不能用来声明数组或字典里的元素

		:use strict  约束
		:return

		调用：忽略&号（语法判断、编译器已经见过子程序定义） --> 必须&(与内置函数重名）
		
		累加器：state 保留了上一次调用的结果，直到程序全部结束
	

二、输入和输出

		输入: <STDIN> 标准输入(键盘)； <>命令行参数作为输入源

		输出：
			  print 1.列表操作符 2.函数调用 
			  加入括号后，是哪种，分情况判断（若只有一个参数或没有参数呢？)

			  printf 列表操作符

		文件句柄：STDIN、STDOUT、STDERR、DATA、ARGV、ARGVOUT

		perl世界异常: die(打印错误并推出)、warn(显示警告不推出)

		改变默认文件句柄： select 、重定向

三、其他
	
		控制结构：unless 、until、表达式修饰符、elsif、自增/自减、for、条件
		五种循环结构: last、next、redo、标签


------------------------------------------------------------

特殊变量：
	$_		默认变量或控制变量
	_		虚拟文件句柄
	@_		私有参数数组
	$ARGV	当前文件名
	@ARGV   命令行参数列表
	$0      保存程序名
	$!      系统错误信息
	$|      不缓冲
	$^I		备份文件变量
	$"      列表项目分割符
	$$		进程号
	$@      存储错误消息

