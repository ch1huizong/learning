1.translate方法字符串去除。
2.linecache缓存小的并且频繁使用的文件比较好。
3.本质就是前n-1条记录的字节数相加，得到第n条记录的start point

string.Template生成模板

思想： 一个函数需要两个参数，
	   闭包使用一个函数一个参数，总共还是两个参数，只不过
	   把参数分配在不同的内外函数中。

	   闭包，把环境封装，以后不再为使用环境重复生成环境了。


一、字符串

	1.使用struct切割字符串


终端本身会有编码，你输入的字符，然后用print(其实就是sys.stdou)打印时，
字符本身被终端的编码编码成字节，然后送至sys.out中特定编码的解码，最后显示内容


...unicode部分编码


25没看
------------------------------------------------------------

2.13  14未看

2.21...continuing124

对象实现的接口协议，给予特定的功能的函数更大的使用空间。

二进制文件在非unix平台打开的问题

底层的字节是一个问题，在python中的对象表示是另一个问题。

为什么seek不能用于以文本文件打开的？

在win下把打开的二进制文件写入到  以文本模式打开(python做的)的标准文件中sys.stdout



------------------------------------------------------------

属性和内容？拷贝
需要修改某些对象的时候，引用和拷贝才会出现问题。

拷贝出现的需求：当担心某些操作会修改原对象时，才需要一个副本来实验操作

浅拷贝：创建了新对象，但内容和属性指向原来的对象内容和属性（架子）
		与元对象有共同部分
		容器类型的浅拷贝t(o)

深拷贝：不仅创建新对象，连内用和属性也是新的。

拷贝的对象：容器类型、类类型、不变的数据类型（无意义）

列表推导：修改一个原来的列表或者基于原来的列表创建新列表

多维列表引用共享的问题
辅助列表

统计时，d.get最后用于value不可变情景;d.setdefault,用于值value可变情景 
dict(): 参数1.字典 2.(k,v)序列； 3.关键子参数

d.get 不改变字典;d.setdefault和d.pop都改变字典;pop一个参数时可以引发异常

制作字典时用dict(pair), pair为键-值序列比较不错

字段命名 --> 对象的命名字典(内部字典) 利用属性储藏命名子项目


关键子参数好像跟函数调用有关，而默认参数与函数定义有关。

21.22-.23

------------------------------------------------------------

python中排序算法的历史：
	快速排序 --> 抽样混合排序(抽样排序+插入排序) --> 归并排序
	
DSU :
	转化,元组列表

排序：列表的内建sort, 基础，条目顺序的比较
搜索：字典


243页将列表与辅助词典捆在一起的对象太复杂了，没看
5.14  5.15


------------------------------------------------------------

迭代器和生成器

	数据结构?

更高一级的抽象。。。

713windowed函数未看。。。
19.16到章末。。。
