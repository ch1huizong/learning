1. xinetd和inetd和syslog?

2. tcp和udp的recv阻塞有什么不同？都会阻塞啊？

    但tcp server端可以对连接处理完后，关闭，相应的客户端进程可以探测到;
    udp server端口，不可以吧，需要自己处理，相应客户端自己也处理，才结束挂起。
3. time.time 1970...now
   
   struct  1900 ...now

4. python世界中的字符串结束符

    编码：把可打印的字符表示成任意的二进制数据

5. socket函数第三个参数，协议编号是什么东东？proto

------------------------------------------------------------
                高并发处理

6.异步通信：
    首先告诉操作系统，你对哪些文件对象感兴趣
    然后操作系统在那些文件对象准备好时通知您。

    场景：高链接，服务器端并不需要多少数据处理;

    困难点之一：跟踪客户端的状态，保存多少状态信息; 不能阻塞

    select/poll 1.将fd ~ 事件联系起来，调用事件处理函数
                2.将fd ~ 协程联系起来(任务),调用任务

    扩展：fd和进程或者线程联系起来
    fd 是客户端socket
            

7. 多进程处理forking技术：
    注意两个问题：
        1.父进程要对子进程进行清除
        2.同步的问题和错误处理问题

8. 多线程处理：
    问题：
        1.自己设计子线程如何结束
        2.决定主线程和子线程结束关系，q.join()或者t.join()
